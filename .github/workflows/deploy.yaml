name: Deploy to Cloudflare Pages

on:
  push:
    tags:
      - 'release/v*.*.*'
      - trunk
    paths:
      - 'web/**'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm
          cache-dependency-path: 'web/pnpm-lock.yaml'

      - name: Install Dependencies
        run: pnpm install

      - name: Build
        env:
          BASE_PATH: ''
        run: pnpm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: 'web/build/'

  preview:
    needs: build
    if: ${{ startsWith(github.ref, 'refs/heads/trunk') }}

    runs-on: ubuntu-latest

    environment:
      name: cloudflare-pages
      url: https://preview.matthewjmoran.pages.dev/

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: 'build/'

      - name: Deploy to Preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: >
            pages deploy build --project-name=${{ vars.CLOUDFLARE_PROJECT }}
            --branch=preview

  production:
    needs: build
    if: ${{ startsWith(github.ref, 'refs/heads/release/v') }}

    runs-on: ubuntu-latest

    environment:
      name: cloudflare-pages
      url: https://matthewjmoran.com/

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: 'build/'

      - name: Deploy to Production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: >
            pages deploy build --project-name=${{ vars.CLOUDFLARE_PROJECT }}
            --branch=production